## train simcol_complete
## trainer
log_dir: results
run_train: true
num_epochs: 25
batch_size: 10
save_checkpoint_freq: 1
log_freq: 500
run_val: true
# run_test: true
metric_str_exclude: ["loss/photometric_1", "loss/photometric_2", "loss/photometric_3", "de/abs_rel", "de/sq_rel", "de/rms", "da/a2", "da/a3"]

## checkpoints
weights_init: pretrained # choices=["pretrained", "scratch"]

## resume
# models_to_load: ["net_depth_encoder", "net_depth_decoder", "net_pose_encoder", "net_pose_decoder"]
# start_epoch: 6
# load_weights_folder: results/simcol_complete/baseline_depthnet_simcol_complete_monovit/models/weights_5

## optimizer
lr: [0.00005556, 0.00001, 26, 0.00011111, 0.00001, 26]

## loss
disable_matcher: false
disparity_smoothness: 0.001
matcher_loss_alpha: 1.
confidence: 0.9
matcher_loss_delta: 4
ratio_consistency: true

## dataloader
data_path: data/simcol_complete/imgs
split: simcol_complete # choices=["eigen_zhou", "eigen_full", "odom", "benchmark", "yifanwang", "yifanwang_cutoff1", "my_kitti", "simcol", "c3vd"]
dataset: SimcolDataset # choices=["kitti", "kitticorres", "kitti_odom", "kitti_depth", "kitti_test", "yifanwang", "my_kitti", "simcol", "simcolcorres", "c3vd", "c3vdcorres"]
png: true
height: 352
width: 352
matcher_result_train: data/simcol_complete/matcher_results/train_352x352.npy
matcher_result_val: data/simcol_complete/matcher_results/val_352x352.npy
# matcher_result_test: data/simcol_complete/matcher_results/test_352x352.npy
load_depth: true

## model
model_name: simcol_complete/RC_matching_depthnet_simcol_complete_monovit
model: EstimateDepth
model_str: monovit # choices=["lite-mono", "lite-mono-small", "lite-mono-tiny", "lite-mono-8m", "monodepth2"]
weight_decay: 0.01
drop_path: 0.2
num_layers: 18 # choices=[18, 34, 50, 101, 152]
disparity_smoothness: 0.001
scales: [0,1,2,3]
min_depth: 0.1
max_depth: 100.0
frame_ids: [0,-1,1]
min_gt_depth: 0.001
max_gt_depth: 1.0
