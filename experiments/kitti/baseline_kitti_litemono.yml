## train kitti
## trainer
log_dir: results
run_train: true
num_epochs: 25
batch_size: 12
save_checkpoint_freq: 1
log_freq: 1000
run_val: true
run_test: false
metric_str_exclude: ["loss/photometric_1", "loss/photometric_2", "loss/photometric_3", "de/abs_rel", "de/sq_rel", "de/rms", "da/a2", "da/a3"]

## checkpoints
mypretrain: /home/data/workspace/heqi/monogastroendo/models/lite-mono-pretrain.pth
weights_init: pretrained # choices=["pretrained", "scratch"]


## resume
# models_to_load: ["net_depth_encoder", "net_depth_decoder", "net_pose_encoder", "net_pose_decoder"]
# start_epoch: 8
# load_weights_folder: results/kitti/baseline_depthnet_kitti_litemono/models/weights_7

## optimizer
lr: [0.0001, 0.00001, 26, 0.0001, 0.00001, 26]

## loss
disable_matcher: true
disparity_smoothness: 0.001
ratio_consistency: false

## dataloader
data_path: data/kitti/imgs
split: eigen_zhou # choices=["eigen_zhou", "eigen_full", "odom", "benchmark", "yifanwang", "yifanwang_cutoff1", "my_kitti", "simcol", "c3vd"]
dataset: KITTIRAWDataset # choices=["kitti", "kitticorres", "kitti_odom", "kitti_depth", "kitti_test", "yifanwang", "my_kitti", "simcol", "simcolcorres", "c3vd", "c3vdcorres"]
png: false
height: 192
width: 640
matcher_result_train: data/kitti/matcher_results/train.npy
matcher_result_val: data/kitti/matcher_results/val.npy
# matcher_result_test: data/kitti/matcher_results/test.npy
load_depth: true

## model
model_name: kitti/baseline_depthnet_kitti_litemono
model: EstimateDepth
model_str: lite-mono # choices=["lite-mono", "lite-mono-small", "lite-mono-tiny", "lite-mono-8m", "monodepth2"]
weight_decay: 0.01
drop_path: 0.2
num_layers: 18 # choices=[18, 34, 50, 101, 152]
disparity_smoothness: 0.001
scales: [0,1,2]
min_depth: 0.1
max_depth: 100.0
frame_ids: [0,-1,1]
min_gt_depth: 0.001
max_gt_depth: 80.
